name: McvineDeploy

env: {"CI_NAME": "github-actions"}

on:
  workflow_dispatch:
    inputs:
      run_mantid2mcvine-pkg:
        description: 'Deploy mantid2mcvine?'
        required: false
        type: boolean
        default: false        
      run_mcvine-core-pkg:
        description: 'Deploy mcvine-core?'
        required: false
        type: boolean
        default: false        
      run_mcvine-resources-pkg:
        description: 'Deploy mcvine-resources?'
        required: false
        type: boolean
        default: false        
      run_mcvine-instruments-pkg:
        description: 'Deploy mcvine-resources?'
        required: false
        type: boolean
        default: false        
      run_mcvine-phonon-pkg:
        description: 'Deploy mcvine.phonon?'
        required: false
        type: boolean
        default: false        
      run_mcvine-ui-pkg:
        description: 'Deploy mcvine.ui?'
        required: false
        type: boolean
        default: false        
      run_mcvine-workflow-pkg:
        description: 'Deploy mcvine.workflow?'
        required: false
        type: boolean
        default: false        
      run_mcvine-pkg:
        description: 'Deploy mcvine?'
        required: false
        type: boolean
        default: false        
  pull_request:
    branches:
      - master
jobs:
  check-permission:
    runs-on: ubuntu-latest
    outputs:
      is_permitted: ${{ steps.permission.outputs.is_permitted }}
    steps:
      - name: Get user mcvine-dev membership
        id: get_permission
        uses: tspascoal/get-user-teams-membership@v2
        with:
          GITHUB_TOKEN: ${{ secrets.TEAM_TOKEN }}
          username: ${{ github.actor }}
          team: deploy
          organization: 'mcvine'
      - name: Set user membership status
        id: permission
        shell: bash -l {0}
        run: |
          echo "is_permitted=${{ steps.get_permission.outputs.isTeamMember == 'true'}}" >> $GITHUB_OUTPUT
      - name: User Acces
        run: |
          if [ "${{ steps.permission.outputs.is_permitted }}" == "true" ]; then
            echo "User is member of the mcvine-dev team. Access granted for deploy!"
          else
            echo "Access Deined"
            exit 1
          fi  
        
  mantid2mcvine-pkg:
    needs: check-permission
    runs-on: ubuntu-latest
    if: ${{ needs.check-permission.outputs.is_permitted == 'true' && github.event.inputs.run_mantid2mcvine-pkg == 'true' }} 
    steps:
      - uses: actions/checkout@v4
      - name: Micromamba    
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: shared_environment.yml
          condarc: |
            channels:
            - neutrons
            - mantid
            - mcvine
            - mcvine/label/rc
            - conda-forge
      - name: build_package
        shell: bash -l {0}
        run: conda build mantid2mcvine
      - name: Upload package to anaconda
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          CONDA_LABEL="mcvine"
          echo pushing mantid2mcvine- with label $CONDA_LABEL
          # anaconda upload

  mcvine-core-pkg:
    needs: check-permission
    runs-on: ubuntu-latest
    if: ${{ needs.check-permission.outputs.is_permitted && github.event.inputs.run_mcvine-core-pkg == 'true' }} 
    steps:
      - uses: actions/checkout@v4
      - name: Micromamba    
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: shared_environment.yml
          condarc: |
            channels:
            - neutrons
            - mantid
            - mcvine
            - mcvine/label/rc
            - conda-forge
      - name: build_package
        shell: bash -l {0}
        run: conda build mcvine-core
      - name: Upload package to anaconda
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          echo pushing mcvine-core- with label mcvine
          # anaconda upload

  mcvine-resources-pkg:
    needs: check-permission
    runs-on: ubuntu-latest
    if: ${{ needs.check-permission.outputs.is_permitted && github.event.inputs.run_mcvine-resources-pkg == 'true' }} 
    steps:
      - uses: actions/checkout@v4
      - name: Micromamba    
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: shared_environment.yml
          condarc: |
            channels:
            - neutrons
            - mantid
            - mcvine
            - mcvine/label/rc
            - conda-forge
      - name: build_package
        shell: bash -l {0}
        run: conda build mcvine-resources
      - name: Upload package to anaconda
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          echo pushing mcvine-resources- with label mcvine
          # anaconda upload
      
  mcvine-instruments-pkg:
    needs: check-permission
    runs-on: ubuntu-latest
    if: ${{ needs.check-permission.outputs.is_permitted && github.event.inputs.run_mcvine-instruments-pkg == 'true' }} 
    steps:
      - uses: actions/checkout@v4
      - name: Micromamba    
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: shared_environment.yml
          condarc: |
            channels:
            - neutrons
            - mantid
            - mcvine
            - mcvine/label/rc
            - conda-forge
      - name: build_package
        shell: bash -l {0}
        run: conda build mcvine.instruments
      - name: Upload package to anaconda
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          echo pushing mcvine.instruments- with label mcvine
          # anaconda upload

  mcvine-phonon-pkg:
    needs: check-permission
    runs-on: ubuntu-latest
    if: ${{ needs.check-permission.outputs.is_permitted && github.event.inputs.run_mcvine-phonon-pkg == 'true' }} 
    steps:
      - uses: actions/checkout@v4
      - name: Micromamba    
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: shared_environment.yml
          condarc: |
            channels:
            - neutrons
            - mantid
            - mcvine
            - mcvine/label/rc
            - conda-forge
      - name: build_package
        shell: bash -l {0}
        run: conda build mcvine.phonon
      - name: Upload package to anaconda
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          echo pushing mcvine.phonon- with label mcvine
          # anaconda upload

  mcvine-ui-pkg:
    needs: check-permission
    runs-on: ubuntu-latest
    if: ${{ needs.check-permission.outputs.is_permitted && github.event.inputs.run_mcvine-ui-pkg == 'true' }} 
    steps:
      - uses: actions/checkout@v4
      - name: Micromamba    
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: shared_environment.yml
          condarc: |
            channels:
            - neutrons
            - mantid
            - mcvine
            - mcvine/label/rc
            - conda-forge
      - name: build_package
        shell: bash -l {0}
        run: conda build mcvine.ui
      - name: Upload package to anaconda
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          echo pushing mcvine.ui- with label mcvine
          # anaconda upload

  mcvine-workflow-pkg:
    needs: check-permission
    runs-on: ubuntu-latest
    if: ${{ needs.check-permission.outputs.is_permitted && github.event.inputs.run_mcvine-workflow-pkg == 'true' }} 
    steps:
      - uses: actions/checkout@v4
      - name: Micromamba    
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: shared_environment.yml
          condarc: |
            channels:
            - neutrons
            - mantid
            - mcvine
            - mcvine/label/rc
            - conda-forge
      - name: build_package
        shell: bash -l {0}
        run: conda build mcvine.workflow
      - name: Upload package to anaconda
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          echo pushing mcvine.workflow- with label mcvine
          # anaconda upload

  mcvine-pkg:
    needs: check-permission
    runs-on: ubuntu-latest
    if: ${{ needs.check-permission.outputs.is_permitted && github.event.inputs.run_mcvine-pkg == 'true' }} 
    steps:
      - uses: actions/checkout@v4
      - name: Micromamba    
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: shared_environment.yml
          condarc: |
            channels:
            - neutrons
            - mantid
            - mcvine
            - mcvine/label/rc
            - conda-forge
      - name: build_package
        shell: bash -l {0}
        run: conda build mcvine
      - name: Upload package to anaconda
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          echo pushing mcvine- with label mcvine
          # anaconda upload





