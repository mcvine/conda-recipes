name: DanseDeploy

env: {"CI_NAME": "github-actions"}

on:
  workflow_dispatch:
    inputs:
      run_danse-bpext-pkg:
        description: 'Deploy danse.ins.bpext?'
        required: false
        type: boolean
        default: false        
      run_danse-ins-pkg:
        description: 'Deploy danse.ins?'
        required: false
        type: boolean
        default: false        
      run_danse-dsm-pkg:
        description: 'Deploy danse.ins.dsm?'
        required: false
        type: boolean
        default: false        
      run_danse-journal-pkg:
        description: 'Deploy journal?'
        required: false
        type: boolean
        default: false        
      run_danse-numpyext-pkg:
        description: 'Deploy danse.ins.numpyext?'
        required: false
        type: boolean
        default: false        
      run_danse-pyre-pkg:
        description: 'Deploy pyre?'
        required: false
        type: boolean
        default: false        

jobs:
  main-branch:
    runs-on: ubuntu-latest
    outputs:
      is_master: ${{ steps.branch_info.outputs.is_master }}
    steps:
      - name: Get branch info
        id: branch_info
        shell: bash -l {0}
        run: |
          echo "is_master=${{ github.ref == 'refs/heads/master'}}" >> $GITHUB_OUTPUT
      - name: Branch Access
        run: |
          if [ "${{ steps.branch_info.outputs.is_master }}" == "true" ]; then
            echo "Master Branch found!"
          else
            echo "Deploy workflow runs only on the master branch!"
            exit 1
          fi  
        
  check-permission:
    needs: main-branch
    runs-on: ubuntu-latest
    outputs:
      is_permitted: ${{ steps.permission.outputs.is_permitted }}
    steps:
      - name: Get user mcvine-dev membership
        id: get_permission
        uses: tspascoal/get-user-teams-membership@v2
        with:
          GITHUB_TOKEN: ${{ secrets.TEAM_TOKEN }}
          username: ${{ github.actor }}
          team: deploy
          organization: 'mcvine'
      - name: Set user membership status
        id: permission
        shell: bash -l {0}
        run: |
          echo "is_permitted=${{ steps.get_permission.outputs.isTeamMember == 'true'}}" >> $GITHUB_OUTPUT
      - name: User Access
        run: |
          if [ "${{ steps.permission.outputs.is_permitted }}" == "true" ]; then
            echo "Access Granted for Deploy!"
          else
            echo "Access Denied!"
            exit 1
          fi  

  danse-bpext-pkg:
    needs: check-permission
    runs-on: ubuntu-latest
    if: ${{ needs.check-permission.outputs.is_permitted == 'true'  && github.event.inputs.run_danse-bpext-pkg == 'true' }} 
    steps:
      - uses: actions/checkout@v4
      - name: Micromamba    
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: shared_environment.yml
          condarc: |
            channels:
            - neutrons
            - mantid
            - mcvine
            - mcvine/label/rc
            - conda-forge
      - name: build_package
        shell: bash -l {0}
        run: conda build danse/bpext --output-folder .
      - name: Upload package to anaconda
        shell: bash -l {0}
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          pkg=`ls linux-64/danse.ins.bpext-*`
          CONDA_USER="mcvine"
          CONDA_LABEL="main"
          if [[ $pkg =~ ([0-9]+rc[0-9]+) ]]; then
            CONDA_LABEL="rc"
          fi  
          echo $pkg pushing with label $CONDA_LABEL
          anaconda upload --label CONDA_LABEL --user $CONDA_USER $pkg

  danse-ins-pkg:
    needs: check-permission
    runs-on: ubuntu-latest
    if: ${{ needs.check-permission.outputs.is_permitted == 'true'  && github.event.inputs.run_danse-ins-pkg == 'true' }} 
    steps:
      - uses: actions/checkout@v4
      - name: Micromamba    
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: shared_environment.yml
          condarc: |
            channels:
            - neutrons
            - mantid
            - mcvine
            - mcvine/label/rc
            - conda-forge
      - name: build_package
        shell: bash -l {0}
        run: conda build danse/danse.ins --output-folder .
      - name: Upload package to anaconda
        shell: bash -l {0}
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          pkg=`ls noarch/danse.ins-*`
          CONDA_USER="mcvine"
          CONDA_LABEL="main"
          if [[ $pkg =~ ([0-9]+rc[0-9]+) ]]; then
            CONDA_LABEL="rc"
          fi  
          echo $pkg pushing with label $CONDA_LABEL
          anaconda upload --label CONDA_LABEL --user $CONDA_USER $pkg

  danse-dsm-pkg:
    needs: check-permission
    runs-on: ubuntu-latest
    if: ${{ needs.check-permission.outputs.is_permitted == 'true' && github.event.inputs.run_danse-dsm-pkg == 'true' }} 
    steps:
      - uses: actions/checkout@v4
      - name: Micromamba    
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: shared_environment.yml
          condarc: |
            channels:
            - neutrons
            - mantid
            - mcvine
            - mcvine/label/rc
            - conda-forge
      - name: build_package
        shell: bash -l {0}
        run: conda build danse/dsm --output-folder .
      - name: Upload package to anaconda
        shell: bash -l {0}
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          pkg=`ls noarch/danse.ins.dsm-*`
          CONDA_USER="mcvine"
          CONDA_LABEL="main"
          if [[ $pkg =~ ([0-9]+rc[0-9]+) ]]; then
            CONDA_LABEL="rc"
          fi  
          echo $pkg pushing with label $CONDA_LABEL
          anaconda upload --label CONDA_LABEL --user $CONDA_USER $pkg

  danse-journal-pkg:
    needs: check-permission
    runs-on: ubuntu-latest
    if: ${{ needs.check-permission.outputs.is_permitted == 'true' && github.event.inputs.run_danse-journal-pkg == 'true' }} 
    steps:
      - uses: actions/checkout@v4
      - name: Micromamba    
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: shared_environment.yml
          condarc: |
            channels:
            - neutrons
            - mantid
            - mcvine
            - mcvine/label/rc
            - conda-forge
      - name: build_package
        shell: bash -l {0}
        run: conda build danse/journal --output-folder .
      - name: Upload package to anaconda
        shell: bash -l {0}
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          pkg=`ls linux-64/journal-*`
          CONDA_USER="mcvine"
          CONDA_LABEL="main"
          if [[ $pkg =~ ([0-9]+rc[0-9]+) ]]; then
            CONDA_LABEL="rc"
          fi  
          echo $pkg pushing with label $CONDA_LABEL
          anaconda upload --label CONDA_LABEL --user $CONDA_USER $pkg

  danse-numpyext-pkg:
    needs: check-permission
    runs-on: ubuntu-latest
    if: ${{ needs.check-permission.outputs.is_permitted == 'true' && github.event.inputs.run_danse-numpyext-pkg == 'true' }} 
    steps:
      - uses: actions/checkout@v4
      - name: Micromamba    
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: shared_environment.yml
          condarc: |
            channels:
            - neutrons
            - mantid
            - mcvine
            - mcvine/label/rc
            - conda-forge
      - name: build_package
        shell: bash -l {0}
        run: conda build danse/numpyext --output-folder .
      - name: Upload package to anaconda
        shell: bash -l {0}
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          pkg=`ls linux-64/danse.ins.numpyext-*`
          CONDA_USER="mcvine"
          CONDA_LABEL="main"
          if [[ $pkg =~ ([0-9]+rc[0-9]+) ]]; then
            CONDA_LABEL="rc"
          fi  
          echo $pkg pushing with label $CONDA_LABEL
          anaconda upload --label CONDA_LABEL --user $CONDA_USER $pkg

  danse-pyre-pkg:
    needs: check-permission
    runs-on: ubuntu-latest
    if: ${{ needs.check-permission.outputs.is_permitted == 'true' && github.event.inputs.run_danse-pyre-pkg == 'true' }} 
    steps:
      - uses: actions/checkout@v4
      - name: Micromamba    
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: shared_environment.yml
          condarc: |
            channels:
            - neutrons
            - mantid
            - mcvine
            - mcvine/label/rc
            - conda-forge
      - name: build_package
        shell: bash -l {0}
        run: conda build danse/pyre --output-folder .
      - name: Upload package to anaconda
        shell: bash -l {0}
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          pkg=`ls linux-64/pyre-*`
          CONDA_USER="mcvine"
          CONDA_LABEL="main"
          if [[ $pkg =~ ([0-9]+rc[0-9]+) ]]; then
            CONDA_LABEL="rc"
          fi  
          echo $pkg pushing with label $CONDA_LABEL
          anaconda upload --label CONDA_LABEL --user $CONDA_USER $pkg
